{"version":3,"sources":["features/valueSliders.ts","hooks/reduxHooks.ts","components/PriceSlider.tsx","hooks/use-debounce.tsx","components/Sliders.tsx","features/activeBar.ts","hooks/use-windowSize.tsx","components/Ð¡hart.tsx","components/Charts.tsx","App.tsx","app/store.ts","index.tsx"],"names":["valueSlidersSlice","createSlice","name","initialState","storage","transfer","reducers","setStorage","value","action","payload","setTransfer","actions","useAppSelector","useSelector","useAppDispatch","useDispatch","PriceSlider","fn","useState","setValue","debounceValue","delay","setdebounceValue","useEffect","timeoutId","setTimeout","clearTimeout","useDebounce","className","type","min","max","step","onChange","e","target","Sliders","dispatch","changeStorageSlider","useCallback","number","valueSlidersActions","changeTransferSlider","activeBarSlice","activeSliders","price","setActiveBar","minValueIndex","findIndex","item","Math","map","getWindowSize","window","innerWidth","innerHeight","colorsBar","Chart","minPayment","maxPayment","options","state","valueSliders","selectOption","setSelectOption","windowSize","setWindowSize","handleWindowResize","addEventListener","removeEventListener","useWindowSizes","windowWidth","totalPrice","useMemo","transferValue","free","storageValue","round","transferPrice","storagePrice","displayPrise","activeBarActions","classNames","style","height","width","length","aria-hidden","onClick","checked","Charts","App","store","configureStore","reducer","valueSlidersReduser","activeBarSliceReduser","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c51c4f00.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst valueSlidersSlice = createSlice({\n  name: 'valueSliders',\n  initialState: {\n    storage: 0,\n    transfer: 0,\n  },\n  reducers: {\n    setStorage: (value, action: PayloadAction<number>) => {\n      value.storage = action.payload;\n    },\n    setTransfer: (value, action: PayloadAction<number>) => {\n      value.transfer = action.payload;\n    },\n  },\n});\n\nexport const { actions } = valueSlidersSlice;\nexport default valueSlidersSlice.reducer;\n","/* eslint-disable max-len */\nimport { useDispatch, TypedUseSelectorHook, useSelector } from 'react-redux';\n// import { AppDispatchOrderingStore, RootStateOrderingStore } from '../app/';\nimport { AppDispatch, RootState } from '../app/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\n// export const useAppSelectorOrderingStore: TypedUseSelectorHook<RootStateOrderingStore> = useSelector;\n// export const useAppDispatchOrderingStore: () => AppDispatchOrderingStore = useDispatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDebounce } from '../hooks/use-debounce';\n\ntype Props = {\n  name: string;\n  fn: (value: number) => void;\n};\n\nexport const PriceSlider: React.FC<Props> = ({ name, fn }) => {\n  const [value, setValue] = useState(0);\n\n  const debounceValue = useDebounce(value, 500);\n\n  useEffect(() => {\n    fn(debounceValue);\n  }, [debounceValue]);\n\n  return (\n    <div className=\"price-slider\">\n      {`${name}: ${value}GB`}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1000\"\n        value={value}\n        step={1}\n        onChange={(e) => {\n          setValue(+e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useState } from 'react';\n\nexport const useDebounce = (value: any, delay: number) => {\n  const [debounceValue, setdebounceValue] = useState(value);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setdebounceValue(value);\n    }, delay);\n\n    return () => clearTimeout(timeoutId);\n  }, [value]);\n\n  return debounceValue;\n};\n","import React, { useCallback } from 'react';\nimport { actions as valueSlidersActions } from '../features/valueSliders';\nimport { useAppDispatch } from '../hooks/reduxHooks';\nimport { PriceSlider } from './PriceSlider';\n\nexport const Sliders: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const changeStorageSlider = useCallback((number: number) => {\n    dispatch(valueSlidersActions.setStorage(number));\n  }, []);\n\n  const changeTransferSlider = useCallback((number: number) => {\n    dispatch(valueSlidersActions.setTransfer(number));\n  }, []);\n\n  return (\n    <div className=\"price-sliders\">\n      <PriceSlider name=\"Storage\" fn={changeStorageSlider} />\n      <PriceSlider name=\"Transfer\" fn={changeTransferSlider} />\n    </div>\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst initialState = {\n  activeSliders: [0, 0, 0, 0],\n  price: [0, 0, 0, 0],\n};\n\nconst activeBarSlice = createSlice({\n  name: 'activeBar',\n  initialState,\n  reducers: {\n    setActiveBar: (value, action: PayloadAction<{number: number, value: number}>) => {\n      value.price[action.payload.number] = action.payload.value;\n      const minValueIndex = value.price.findIndex(item => item === Math.min(...value.price));\n\n      value.activeSliders = value.activeSliders.map(() => 0);\n      value.activeSliders[minValueIndex] = 1;\n    },\n  },\n});\n\nexport const { actions } = activeBarSlice;\nexport default activeBarSlice.reducer;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowSize() {\n  const { innerWidth, innerHeight } = window;\n\n  return { innerWidth, innerHeight };\n}\n\nexport const useWindowSizes = () => {\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  return [windowSize.innerWidth, windowSize.innerHeight];\n};\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { actions as activeBarActions } from '../features/activeBar';\nimport { useAppDispatch, useAppSelector } from '../hooks/reduxHooks';\nimport { useWindowSizes } from '../hooks/use-windowSize';\n\ntype Props = {\n  name: string\n  minPayment: number,\n  maxPayment: number,\n  options: {\n    name: string,\n    storagePrice: number,\n    transferPrice: number\n    free: number;\n  }[],\n  number: number,\n};\n\nconst colorsBar = ['red', 'orange', 'purple', 'blue'];\n\nexport const Chart: React.FC<Props> = ({\n  name, minPayment, maxPayment, options, number,\n}) => {\n  const dispatch = useAppDispatch();\n  const { transfer, storage } = useAppSelector(state => state.valueSliders);\n  const { activeSliders } = useAppSelector(state => state.activeBarSlice);\n  const [selectOption, setSelectOption] = useState(options[0]);\n  const [windowWidth] = useWindowSizes();\n\n  const totalPrice = useMemo(() => {\n    const transferValue = transfer > selectOption.free\n      ? transfer - selectOption.free\n      : 0;\n\n    const storageValue = storage > selectOption.free\n      ? storage - selectOption.free\n      : 0;\n\n    return Math.round(\n      ((transferValue * selectOption.transferPrice)\n      + (storageValue * selectOption.storagePrice))\n      * 100,\n    ) / 100;\n  }, [transfer, storage, selectOption]);\n\n  const displayPrise = useMemo(() => {\n    return minPayment > totalPrice\n      ? minPayment\n      : ((totalPrice > maxPayment && maxPayment) || totalPrice);\n  }, [totalPrice]);\n\n  useEffect(() => {\n    dispatch(activeBarActions.setActiveBar({\n      number,\n      value: displayPrise,\n    }));\n  }, [displayPrise]);\n\n  return (\n    <div className=\"chart\">\n      <div className=\"chart__bar\">\n        <div className=\"chart__bar__price\">\n          {displayPrise}\n        </div>\n        <div\n          className={classNames(\n            'chart__bar__item',\n            !activeSliders[number] ? '' : `chart__bar__item--${colorsBar[number]}`,\n          )}\n          style={{\n            height: windowWidth > 1020 ? '100%' : `${displayPrise}%`,\n            width: windowWidth < 1020 ? 'auto' : `${displayPrise}%`,\n          }}\n        >\n\n        </div>\n      </div>\n      <div className=\"chart__name\">\n        <strong>\n          {name}\n        </strong>\n        {options.length > 1 && (\n          <form className=\"chart__options\">\n            {options.map(item => {\n              return (\n                <>\n                  <div\n                    aria-hidden\n                    onClick={() => {\n                      setSelectOption(item);\n                    }}\n                  >\n                    {item.name}\n                    <input\n                      checked={item.name === selectOption.name}\n                      type=\"radio\"\n                      name=\"fav_language\"\n                    />\n                  </div>\n                </>\n              );\n            })}\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Chart } from './Ð¡hart';\n\nexport const Charts: React.FC = () => {\n  return (\n    <div className=\"charts\">\n      <Chart\n        name=\"backblaze\"\n        minPayment={7}\n        maxPayment={1000}\n        number={0}\n        options={[{\n          name: '',\n          storagePrice: 0.005,\n          transferPrice: 0.01,\n          free: 0,\n        },\n        ]}\n      />\n      <Chart\n        name=\"bunny\"\n        minPayment={0}\n        maxPayment={10}\n        number={1}\n        options={[{\n          name: 'HDD',\n          storagePrice: 0.01,\n          transferPrice: 0.01,\n          free: 0,\n        },\n        {\n          name: 'SSD',\n          storagePrice: 0.02,\n          transferPrice: 0.01,\n          free: 0,\n        },\n        ]}\n      />\n      <Chart\n        name=\"scaleway\"\n        minPayment={0}\n        maxPayment={1000}\n        number={2}\n        options={[{\n          name: 'Multi',\n          storagePrice: 0.06,\n          transferPrice: 0.02,\n          free: 75,\n        },\n        {\n          name: 'Single',\n          storagePrice: 0.03,\n          transferPrice: 0.02,\n          free: 75,\n        },\n        ]}\n      />\n      <Chart\n        name=\"vultr\"\n        minPayment={5}\n        maxPayment={1000}\n        number={3}\n        options={[{\n          name: '',\n          storagePrice: 0.01,\n          transferPrice: 0.01,\n          free: 0,\n        },\n        ]}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport './styles/App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Sliders } from './components/Sliders';\nimport { Charts } from './components/Charts';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Sliders />\n        <Charts />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { configureStore } from '@reduxjs/toolkit';\nimport valueSlidersReduser from '../features/valueSliders';\nimport activeBarSliceReduser from '../features/activeBar';\n\nconst store = configureStore({\n  reducer: {\n    valueSliders: valueSlidersReduser,\n    activeBarSlice: activeBarSliceReduser,\n  },\n});\n\ncomposeWithDevTools();\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}